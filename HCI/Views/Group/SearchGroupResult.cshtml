@using System.Text
@model HCI.Models.SearchGroupResultModel


@{
    ViewBag.Title = "Search Group Result";
}

<h2>Search Group Result</h2>

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function ($) {
            $(function () {
                $('#GeneralSearchKeyword').focus();
            })
        });

        $(document).ready(function ($) {
            $(function () {
                $('[data-toggle="tooltip"]').tooltip()
            })
        });
        $(document).ready(function ($) {
            $(function () {
                $('#groupList').on('click', '#joinBtn', function()
                {
                    var groupId = $(this).parent().parent().children('#groupId').prop('value');
                    var userId = $(this).parent().parent().children('#userId').prop('value');
                    var currentBtn = $(this);

                    $.ajax({
                        url: '/HCI/api/GroupMembershipWebAPI?' + 'userId=' + userId + '&groupId=' + groupId,
                        dataType: 'json',
                        type: 'POST',
                        success: function (data) {

                            currentBtn.hide();
                            currentBtn.siblings('#quitBtn').show();

                            if (data == 'waiting')
                            {
                                currentBtn.parent().parent().children("#waitingInfo").text("Waiting for the group owner's approval.");
                            }
                            else
                            {
                                currentBtn.parent().parent().children("#waitingInfo").text("You succeeded in joining the group");
                            }
                        }
                    });
                });

                $('#groupList').on('click', '#quitBtn', function () {
                    var groupId = $(this).parent().parent().children('#groupId').prop('value');
                    var userId = $(this).parent().parent().children('#userId').prop('value');
                    var currentBtn = $(this);
                    $.ajax({
                        url: '/HCI/api/GroupMembershipWebAPI?' + 'userId=' + userId + '&groupId=' + groupId,
                        dataType: 'json',
                        type: 'DELETE',
                        success: function (data) {

                            currentBtn.hide();
                            currentBtn.siblings('#joinBtn').show();
                            currentBtn.parent().parent().children("#waitingInfo").text("");


                        }
                    });
                });
            });
        });

    </script>
}

@section css{
    <style>
        .list-item-min-height {
            height: 40px;
        }

        .bold{
            font-weight:bold;
        }
    </style>
}


<div style="height:30px"></div>
@using (Html.BeginForm("SearchGroupResult", "Group", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", @role = "form" }))
{
<div class="form-group">
    <label for="GeneralSearchKeyword" class="col-md-2 control-label">Search: </label>
    <div class="col-md-6">
        @if (Model.Queries != null && Model.Queries.IsAdvancedSearch)
        {
            <input class="form-control" id="GeneralSearchKeyword" name="GeneralSearchKeyword" placeholder="Input keywords here" style="min-width:100%" type="text" value="" />
        }
        else
        { 
            <input class="form-control" id="GeneralSearchKeyword" name="GeneralSearchKeyword" placeholder="Input keywords here" style="min-width:100%" type="text" value="@Model.Queries.GeneralSearchKeyword" />
        }
        <input id="IsAdvancedSearch" name="IsAdvancedSearch" type="hidden" value="false" />
    </div>
    <div class="col-md-1">
        <button type="submit" class="btn btn-default">
            Search
        </button>
    </div>
    <div class="col-md-2" style="padding-top: 7px;">
        @Html.ActionLink("Advanced Search", "AdvancedSearchGroup", "Group")
    </div>
</div>
}

@if (Model.Queries != null && Model.Queries.IsAdvancedSearch && Model.Queries.QueryList != null)
{
    <div class="alert alert-success" role="alert">
        The below result is searched through "Advanced Search" using the queries: 
            @{
                bool first = true;
            }
        @foreach (var query in Model.Queries.QueryList)
        {
            if (string.IsNullOrEmpty(query.SearchValue))
            {
                continue;
            }

            if (!first)
            {
                <span class="bold">@query.CombineType</span>
            }
            else { 
                first = false;
            }
            <span class="bold">
                (@query.SearchType @query.SearchVerbType @query.SearchValue)
            </span>
        }
</div>
}
else if (Model.Queries != null && !string.IsNullOrEmpty(Model.Queries.GeneralSearchKeyword))
{
    <div class="alert alert-success" role="alert">
        The below result is searched using the keyword: <span class="bold">@Model.Queries.GeneralSearchKeyword</span>
    </div>
}

@if (Model.Groups.FirstOrDefault() != null)
{
<div id="groupList">
    @foreach (var group in Model.Groups)
    {

    <div class="row">
        <div class="panel panel-primary" id="groupPanel">
            <div class="panel-body">
                <div class="col-md-1" style="min-width:10%"></div>
                <div class="col-md-9">
                    <ul class="list-group">
                        <li class="list-group-item list-item-min-height" style="background-color:#e3e3e3;padding-top: 5px;">
                            <div class="col-md-4" id="nameValue" style="padding-top: 5px;font-weight: bold;font-size: 16px;">
                                    @Html.ActionLink(group.name, actionName: "GroupDetail", controllerName: "User", routeValues: new { ID = group.id }, htmlAttributes: new object())
                            </div>
                            <div class="col-md-7">
                                @Html.Hidden("groupId", group.id)
                                @Html.Hidden("userId", Model.UserID)
                                <div class="col-md-9" id="waitingInfo" style="padding-left: 0px;padding-top: 5px;font-weight: bold;min-width: 310px;"></div>
                                <div class="col-md-3">
                                    @if (group.IsMember(Model.UserID))
                                    {
                                        <button id="quitBtn" type="button" class="btn btn-danger" style="min-width: 180px; height:30px;padding-top: 3px;">
                                            Undo Join
                                        </button>
                                        <button id="joinBtn" type="button" class="btn btn-default" style="min-width: 180px; height:30px;padding-top: 3px;display:none">
                                            Join
                                        </button>
                                    }
                                    else
                                    {
                                        <button id="quitBtn" type="button" class="btn btn-danger" style="min-width: 180px; height:30px;padding-top: 3px;display:none">
                                            Undo Join
                                        </button>
                                        <button id="joinBtn" type="button" class="btn btn-default" style="min-width: 180px; height:30px;padding-top: 3px;">
                                            Join
                                        </button>
                                    }
                                </div>
                             </div>
                        </li>
                        <li class="list-group-item list-item-min-height">
                            <div class="col-md-4" id="descLabel">
                                Description:
                            </div>
                            <div class="col-md-8" id="descValue">
                                @group.description
                            </div>
                        </li>
                        <li class="list-group-item list-item-min-height">
                            <div class="col-md-4">
                                Study Fields:
                            </div>
                            <div class="col-md-8">
                                @String.Join(",", group.RelGroupsStudyfields.Select(x => x.StudyField.name))
                            </div>
                        </li>
                        <li class="list-group-item list-item-min-height">
                            <div class="col-md-4">
                                Course Number:
                            </div>
                            <div class="col-md-8">
                                @group.course_no
                            </div>
                        </li>

                        @{
                        int height = 20 * (group.MeetingDescriptions.Count + 1);
                        if (height < 40)
                        { 
                            height = 40;
                        }
                        string heightPx = height.ToString() + "px";
                        }                               
                        <li class="list-group-item list-item-min-height" style="height:@heightPx">
                            
                            <div class="col-md-4">
                                Regular meetings:
                            </div>
                            <span class="col-md-8">
                                @{
                                    StringBuilder mtgDesc = new StringBuilder();
                                    foreach(var desc in group.MeetingDescriptions)
                                    {
                                        if (mtgDesc.Length > 0)
                                        {
                                            mtgDesc.Append("<br>");
                                        }
                                        mtgDesc.Append(desc);
                                    }
                                }
                                @Html.Raw(mtgDesc.ToString())
                            </span>
                        </li>
                        <li class="list-group-item list-item-min-height">
                            <div class="col-md-4">
                                Closed Group:
                            </div>
                            <div class="col-md-8">
                                @group.is_closed.ToString()
                                @if (group.is_closed == HCI.Utils.YesNo.Yes)
                            {
                            <a href="#" data-toggle="tooltip" data-placement="right" title="You have to get group owner's approval to join a closed group">&nbsp;(What's this)</a>
                            }
                            </div>
                        </li>
                        <li class="list-group-item list-item-min-height">
                            <div class="col-md-4">
                                Max Member Number:
                            </div>
                            <div class="col-md-8">
                                @group.max_member_number
                            </div>
                        </li>
                        <li class="list-group-item list-item-min-height">
                            <div class="col-md-4">
                                Owner:
                            </div>
                            <div class="col-md-8">
                                @group.Owner.name
                            </div>
                        </li>


                    </ul>
                </div>

            </div>

        </div>
    </div>
    }
</div>
}
else
{
    <div style="height:30px"></div>
    <h3 style="padding-left:20%">Oops! No group meets your high demand. Please search other groups.</h3>
}


<!-- Modal -->
<div class="modal" style="top:30%" id="QuitGroupConfirmation" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="modalTitle">Quit the Group?</h4>
            </div>
            <div class="modal-body" id="modalBody">
                You are going to leave the group. Are you sure?
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm("QuitGroup", "User", FormMethod.Post))
                {
                    <button type="button" class="btn btn-default" data-dismiss="modal">No</button>

                    @Html.Hidden("modalGroupId")
                    <button type="submit" class="btn btn-danger">Yes</button>
                }
            </div>
        </div>
    </div>
</div>